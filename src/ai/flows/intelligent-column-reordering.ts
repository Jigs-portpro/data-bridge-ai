// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview A flow that intelligently reorders columns in a dataset based on their content and titles.
 *
 * - intelligentColumnReordering - A function that reorders the columns of a dataset.
 * - IntelligentColumnReorderingInput - The input type for the intelligentColumnReordering function.
 * - IntelligentColumnReorderingOutput - The return type for the intelligentColumnReordering function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const IntelligentColumnReorderingInputSchema = z.object({
  columnNames: z
    .array(z.string())
    .describe('An array of column names in the dataset.'),
  sampleData: z
    .array(z.record(z.string()))
    .describe(
      'A sample of data from the dataset, represented as an array of objects where each object is a row and keys are column names.'
    ),
});
export type IntelligentColumnReorderingInput = z.infer<
  typeof IntelligentColumnReorderingInputSchema
>;

const IntelligentColumnReorderingOutputSchema = z.object({
  reorderedColumnNames: z
    .array(z.string())
    .describe('An array of column names in the intelligently reordered sequence.'),
  reasoning: z
    .string()
    .describe(
      'Explanation of why the columns were reordered in the manner returned in reorderedColumnNames.'
    ),
});
export type IntelligentColumnReorderingOutput = z.infer<
  typeof IntelligentColumnReorderingOutputSchema
>;

export async function intelligentColumnReordering(
  input: IntelligentColumnReorderingInput
): Promise<IntelligentColumnReorderingOutput> {
  return intelligentColumnReorderingFlow(input);
}

const prompt = ai.definePrompt({
  name: 'intelligentColumnReorderingPrompt',
  input: {schema: IntelligentColumnReorderingInputSchema},
  output: {schema: IntelligentColumnReorderingOutputSchema},
  prompt: `You are an AI assistant that reorders columns in a dataset based on their content and titles to improve readability and analysis.

Given the following column names and sample data:

Column Names: {{columnNames}}
Sample Data: {{sampleData}}

Reorder the columns in a logical sequence. Explain the reasoning behind the reordering.

Return the reordered column names and the reasoning behind the reordering in the following JSON format:
{
  "reorderedColumnNames": ["column1", "column2", "column3"],
  "reasoning": "Explanation of why the columns were reordered in this sequence."
}

Ensure the output is a valid JSON.
`,
});

const intelligentColumnReorderingFlow = ai.defineFlow(
  {
    name: 'intelligentColumnReorderingFlow',
    inputSchema: IntelligentColumnReorderingInputSchema,
    outputSchema: IntelligentColumnReorderingOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
